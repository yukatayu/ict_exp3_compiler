ORG 0 / Interrupt Entry Point
INT_RET, HEX 0 / Interrupt Return Address
BUN INT_MAIN
ORG 10 / Entry Point
LDA MASKSIN
IMK
SIO
ION

 / > while loop MainLoop
_XWH1MainLoop,
 / while (
    LDA HaltFlag
SZA
BUN _XWH3MainLoop
BUN _XWH2MainLoop
 / ) {
_XWH2MainLoop,
BUN _XWH1MainLoop
 / }
_XWH3MainLoop,
 / < end of while loop MainLoop

_M_, HLT

 / > beginning of INT_MAIN
INT_MAIN,
    STA ACCBAK
    CLA
    CIL
    STA EBAK

     / > if InputAvailable
     / if (
        CLA
        INC
        SKI
        CLA
    SZA
    BUN _XIF1InputAvailable
    BUN _XIF2InputAvailable
     / ) {
    _XIF1InputAvailable,
        INP
        STA INTmp

             / > if CheckCharEnt
             / if (
                LDA ASCIIENTER
                CMA
                INC
                ADD INTmp
            SZA
            BUN _XIF2CheckCharEnt
            BUN _XIF1CheckCharEnt
             / ) {
            _XIF1CheckCharEnt,
                CLA
                INC
                STA DECLTRIG
                LDA MASKSOUT
                IMK
             / }
            _XIF2CheckCharEnt,
             / < end of if CheckCharEnt


             / > if CheckCharCtrlD
             / if (
                LDA ASCIICTRLD
                CMA
                INC
                ADD INTmp
            SZA
            BUN _XIF2CheckCharCtrlD
            BUN _XIF1CheckCharCtrlD
             / ) {
            _XIF1CheckCharCtrlD,
                CLA
                INC
                STA HaltFlag
             / }
            _XIF2CheckCharCtrlD,
             / < end of if CheckCharCtrlD

            LDA ASCII0
            CMA
            INC
            ADD INTmp
            STA TEMP1

             / > if CheckCharNum
             / if (
                LDA TEMP1
                CLE
                CME
                SZA
                CME
                CLA
                CIL
                STA TEMP2
                LDA TEMP1
                CMA
                INC
                ADD DECVAL
                CLA
                CIL
                ADD TEMP2
            SZA
            BUN _XIF1CheckCharNum
            BUN _XIF2CheckCharNum
             / ) {
            _XIF1CheckCharNum,

                 / > if CheckCharNumPosi
                 / if (
                    LDA TEMP1
                    CIL
                    CLA
                    CIL
                SZA
                BUN _XIF2CheckCharNumPosi
                BUN _XIF1CheckCharNumPosi
                 / ) {
                _XIF1CheckCharNumPosi,
                    LDA N
                    CLE
                    CIL
                    STA N
                    LDA N
                    CLE
                    CIL
                    CLE
                    CIL
                    ADD N
                    ADD TEMP1
                    STA N
                 / }
                _XIF2CheckCharNumPosi,
                 / < end of if CheckCharNumPosi

             / }
            _XIF2CheckCharNum,
             / < end of if CheckCharNum

     / }
    _XIF2InputAvailable,
     / < end of if InputAvailable


     / > beginning of Prepare
    Prepare,

         / > if PrimeDeclTrigger
         / if (
            LDA DECLTRIG
        SZA
        BUN _XIF1PrimeDeclTrigger
        BUN _XIF2PrimeDeclTrigger
         / ) {
        _XIF1PrimeDeclTrigger,
            CLA
            STA DECLTRIG

             / > while loop PrimeSearchLoop
            _XWH1PrimeSearchLoop,
             / while (
                LDA N
            SZA
            BUN _XWH2PrimeSearchLoop
            BUN _XWH3PrimeSearchLoop
             / ) {
            _XWH2PrimeSearchLoop,

                 / > beginning of CP
                CP,
                    LDA IINIT
                    STA I
                    LDA IINIT
                    CMA
                    INC
                    STA MI
                    LDA I2INIT
                    STA I2
                    CLA
                    STA CPRET

                     / > while loop CPLoop
                    _XWH1CPLoop,
                     / while (
                        LDA I2
                        CLE
                        CME
                        SZA
                        CME
                        CLA
                        CIL
                        STA TEMP1
                        LDA I2
                        CMA
                        INC
                        ADD N
                        CLA
                        CIL
                        ADD TEMP1
                    SZA
                    BUN _XWH2CPLoop
                    BUN _XWH3CPLoop
                     / ) {
                    _XWH2CPLoop,
                        LDA I
                        STA ISH
                        LDA N
                        STA ITMP

                         / > if CPSkip1
                         / if (
                            LDA I
                            CLE
                            CIR
                            CLE
                            CIR
                        SZA
                        BUN _XIF1CPSkip1
                        BUN _XIF2CPSkip1
                         / ) {
                        _XIF1CPSkip1,
                            LDA I
                            CIR
                            CME
                            SZE
                            BUN CPCont
                         / }
                        _XIF2CPSkip1,
                         / < end of if CPSkip1


                         / > while loop CPPre
                        _XWH1CPPre,
                         / while (
                            LDA ISH
                            CIL
                            CLA
                            CIL
                        SZA
                        BUN _XWH3CPPre
                        BUN _XWH2CPPre
                         / ) {
                        _XWH2CPPre,
                            LDA ISH
                            CLE
                            CIL
                            STA ISH
                        BUN _XWH1CPPre
                         / }
                        _XWH3CPPre,
                         / < end of while loop CPPre


                         / > while loop CPMain
                        _XWH1CPMain,
                         / while (
                            LDA I
                            CLE
                            CME
                            SZA
                            CME
                            CLA
                            CIL
                            STA TEMP1
                            LDA I
                            CMA
                            INC
                            ADD ISH
                            CLA
                            CIL
                            ADD TEMP1
                        SZA
                        BUN _XWH2CPMain
                        BUN _XWH3CPMain
                         / ) {
                        _XWH2CPMain,

                             / > if DivCmp
                             / if (
                                LDA ISH
                                CLE
                                CME
                                SZA
                                CME
                                CLA
                                CIL
                                STA TEMP1
                                LDA ISH
                                CMA
                                INC
                                ADD ITMP
                                CLA
                                CIL
                                ADD TEMP1
                            SZA
                            BUN _XIF1DivCmp
                            BUN _XIF2DivCmp
                             / ) {
                            _XIF1DivCmp,
                                LDA ISH
                                CMA
                                INC
                                ADD ITMP
                                STA ITMP
                             / }
                            _XIF2DivCmp,
                             / < end of if DivCmp

                            LDA ISH
                            CLE
                            CIR
                            STA ISH
                        BUN _XWH1CPMain
                         / }
                        _XWH3CPMain,
                         / < end of while loop CPMain


                         / > if CPBreak
                         / if (
                            LDA ITMP
                        SZA
                        BUN _XIF2CPBreak
                        BUN _XIF1CPBreak
                         / ) {
                        _XIF1CPBreak,
                            BUN CPEnd
                         / }
                        _XIF2CPBreak,
                         / < end of if CPBreak

                        CPCont,
                        LDA I
                        CLE
                        CIL
                        ADD I2
                        STA I2
                        LDA I2
                        INC
                        STA I2
                        LDA I
                        INC
                        STA I
                        LDA MI
                        CMA
                        INC
                        CMA
                        STA MI
                    BUN _XWH1CPLoop
                     / }
                    _XWH3CPLoop,
                     / < end of while loop CPLoop

                    CLA
                    INC
                    STA CPRET
                    CPEnd,
                 / < end of CP


                 / > if BreakCPRet
                 / if (
                    LDA CPRET
                SZA
                BUN _XIF1BreakCPRet
                BUN _XIF2BreakCPRet
                 / ) {
                _XIF1BreakCPRet,
                    BUN _XWH3PrimeSearchLoop
                 / }
                _XIF2BreakCPRet,
                 / < end of if BreakCPRet

                LDA N
                CMA
                INC
                CMA
                STA N
            BUN _XWH1PrimeSearchLoop
             / }
            _XWH3PrimeSearchLoop,
             / < end of while loop PrimeSearchLoop

            LDA N
            STA NBAK
            CLA
            STA ShowIParam
            LDA N
            STA QVAL

             / > while loop ShowSubDigit
            _XWH1ShowSubDigit,
             / while (
                LDA QVAL
            SZA
            BUN _XWH2ShowSubDigit
            BUN _XWH3ShowSubDigit
             / ) {
            _XWH2ShowSubDigit,
                LDA QVAL
                STA RVAL
                LDA DECVAL
                CMA
                INC
                ADD QVAL
                STA XVAL
                CLA
                STA QVAL

                 / > while loop ShowSubSearch
                _XWH1ShowSubSearch,
                 / while (
                    LDA RVAL
                    CLE
                    CME
                    SZA
                    CME
                    CLA
                    CIL
                    STA TEMP1
                    LDA RVAL
                    CMA
                    INC
                    ADD XVAL
                    CLA
                    CIL
                    ADD TEMP1
                SZA
                BUN _XWH3ShowSubSearch
                BUN _XWH2ShowSubSearch
                 / ) {
                _XWH2ShowSubSearch,
                    LDA XVAL
                    STA RVAL
                    LDA DECVAL
                    CMA
                    INC
                    ADD XVAL
                    STA XVAL
                    LDA QVAL
                    INC
                    STA QVAL
                BUN _XWH1ShowSubSearch
                 / }
                _XWH3ShowSubSearch,
                 / < end of while loop ShowSubSearch

                LDA ShowIParam
                INC
                STA ShowIParam
            BUN _XWH1ShowSubDigit
             / }
            _XWH3ShowSubDigit,
             / < end of while loop ShowSubDigit

         / }
        _XIF2PrimeDeclTrigger,
         / < end of if PrimeDeclTrigger

     / < end of Prepare


     / > if OutputAvailable
     / if (
        CLA
        INC
        SKO
        CLA
    SZA
    BUN _XIF1OutputAvailable
    BUN _XIF2OutputAvailable
     / ) {
    _XIF1OutputAvailable,

         / > if ShowMain
         / if (

             / > beginning of GetDigitOne
            GetDigitOne,
                CLA
                INC
                STA ISH
                LDA ShowIParam
                STA I
                LDA N
                STA QVAL

                 / > if ReadyState
                 / if (
                    LDA I
                SZA
                BUN _XIF2ReadyState
                BUN _XIF1ReadyState
                 / ) {
                _XIF1ReadyState,

                     / > if AnythingToShow
                     / if (
                        LDA SEPTRIG
                    SZA
                    BUN _XIF1AnythingToShow
                    BUN _XIF2AnythingToShow
                     / ) {
                    _XIF1AnythingToShow,
                        CLA
                        STA SEPTRIG

                         / > if DecrNeeded
                         / if (
                            LDA MINIMUMPRIMEP1
                            CLE
                            CME
                            SZA
                            CME
                            CLA
                            CIL
                            STA TEMP1
                            LDA MINIMUMPRIMEP1
                            CMA
                            INC
                            ADD NBAK
                            CLA
                            CIL
                            ADD TEMP1
                        SZA
                        BUN _XIF1DecrNeeded
                        BUN _XIF2DecrNeeded
                         / ) {
                        _XIF1DecrNeeded,
                            LDA NBAK
                            CMA
                            INC
                            CMA
                            STA NBAK
                            STA N
                            CLA
                            INC
                            STA DECLTRIG
                        BUN _XIF3DecrNeeded
                         / } else {  // DecrNeeded
                        _XIF2DecrNeeded,
                            LDA MASKSIN
                            IMK
                         / }
                        _XIF3DecrNeeded,
                         / < end of if DecrNeeded

                        LDA ASCIIENTER
                        BUN GetDigitOutT_End
                     / }
                    _XIF2AnythingToShow,
                     / < end of if AnythingToShow

                    CLA
                    BUN GetDigitOutT_End
                 / }
                _XIF2ReadyState,
                 / < end of if ReadyState


                 / > while loop DispIShift
                _XWH1DispIShift,
                 / while (
                    LDA I
                    CMA
                    INC
                    CMA
                    STA I
                SZA
                BUN _XWH2DispIShift
                BUN _XWH3DispIShift
                 / ) {
                _XWH2DispIShift,
                    LDA ISH
                    CLE
                    CIL
                    STA ISH
                    LDA ISH
                    CLE
                    CIL
                    CLE
                    CIL
                    ADD ISH
                    STA ISH
                BUN _XWH1DispIShift
                 / }
                _XWH3DispIShift,
                 / < end of while loop DispIShift

                LDA ISH
                CMA
                INC
                ADD N
                STA XVAL
                CLA
                STA QVAL
                LDA N
                STA RVAL

                 / > while loop ShowSub
                _XWH1ShowSub,
                 / while (
                    LDA RVAL
                    CLE
                    CME
                    SZA
                    CME
                    CLA
                    CIL
                    STA TEMP1
                    LDA RVAL
                    CMA
                    INC
                    ADD XVAL
                    CLA
                    CIL
                    ADD TEMP1
                SZA
                BUN _XWH3ShowSub
                BUN _XWH2ShowSub
                 / ) {
                _XWH2ShowSub,
                    LDA XVAL
                    STA RVAL
                    LDA ISH
                    CMA
                    INC
                    ADD XVAL
                    STA XVAL
                    LDA QVAL
                    INC
                    STA QVAL
                BUN _XWH1ShowSub
                 / }
                _XWH3ShowSub,
                 / < end of while loop ShowSub

                LDA RVAL
                STA N
                LDA QVAL
                STA TEMP2
                LDA ShowIParam
                CMA
                INC
                CMA
                STA ShowIParam

                 / > if ReachedEnd
                 / if (
                    LDA ShowIParam
                SZA
                BUN _XIF2ReachedEnd
                BUN _XIF1ReachedEnd
                 / ) {
                _XIF1ReachedEnd,
                    CLA
                    INC
                    STA SEPTRIG
                 / }
                _XIF2ReachedEnd,
                 / < end of if ReachedEnd

                LDA TEMP2
                ADD ASCII0
                GetDigitOutT_End,
             / < end of GetDigitOne

        SZA
        BUN _XIF1ShowMain
        BUN _XIF2ShowMain
         / ) {
        _XIF1ShowMain,
            OUT
         / }
        _XIF2ShowMain,
         / < end of if ShowMain

     / }
    _XIF2OutputAvailable,
     / < end of if OutputAvailable

    InterruptReturn,

     / > if HaltTrigger
     / if (
        LDA HaltFlag
    SZA
    BUN _XIF1HaltTrigger
    BUN _XIF2HaltTrigger
     / ) {
    _XIF1HaltTrigger,
        LDA EBAK
        CLE
        CIR
        LDA ACCBAK
        BUN INT_RET I
     / }
    _XIF2HaltTrigger,
     / < end of if HaltTrigger

    LDA EBAK
    CLE
    CIR
    LDA ACCBAK
    ION
    BUN INT_RET I
 / < end of INT_MAIN

 / Data Segment
    ACCBAK, DEC 0
    EBAK, DEC 0
    ShowIParam, DEC 0
    DECLTRIG, DEC 0
    SEPTRIG, DEC 0
    HaltFlag, DEC 0
    MASKSIN, DEC 8
    MASKSOUT, DEC 4
    INTmp, DEC 0
    N, DEC 0
    NBAK, DEC 0
    ASCII0, DEC 48
    ASCIIENTER, DEC 10
    ASCIICTRLD, DEC 4
    DECVAL, DEC 10
    CPRET, DEC 0
    IINIT, DEC 2
    I2INIT, DEC 4
    I, DEC 0
    ITMP, DEC 0
    MI, DEC 0
    I2, DEC 0
    ISH, DEC 0
    TEMP1, DEC 0
    TEMP2, DEC 0
    QVAL, DEC 0
    RVAL, DEC 0
    XVAL, DEC 0
    MINIMUMPRIMEP1, DEC 3
END

