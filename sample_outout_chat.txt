ORG 0 / Interrupt Entry Point
INT_RET, HEX 0 / Interrupt Return Address
BUN INT_MAIN
ORG 10 / Entry Point
CLA
INC
STA OUTTRIG
LDA MASKSOUT
STA MASKS
LDA MASKPIN
ADD MASKPOUT
STA MASKP
LDA MASKS
ADD MASKP
IMK
ION

 / > while loop MainLoop
_XWH1MainLoop,
 / while (
    LDA HaltFlag
SZA
BUN _XWH3MainLoop
BUN _XWH2MainLoop
 / ) {
_XWH2MainLoop,
BUN _XWH1MainLoop
 / }
_XWH3MainLoop,
 / < end of while loop MainLoop

_M_, HLT

 / > beginning of INT_MAIN
INT_MAIN,
    STA ACCBAK
    CLA
    CIL
    STA EBAK
    SIO

     / > if InputAvailable
     / if (
        CLA
        INC
        SKI
        CLA
    SZA
    BUN _XIF1InputAvailable
    BUN _XIF2InputAvailable
     / ) {
    _XIF1InputAvailable,
        INP
        STA INTMP

             / > if CheckCharCtrlD
             / if (
                LDA ASCIICTRLD
                CMA
                INC
                ADD INTMP
            SZA
            BUN _XIF2CheckCharCtrlD
            BUN _XIF1CheckCharCtrlD
             / ) {
            _XIF1CheckCharCtrlD,
                CLA
                INC
                STA HaltFlag
             / }
            _XIF2CheckCharCtrlD,
             / < end of if CheckCharCtrlD


             / > if CheckCharEnt
             / if (
                LDA ASCIIENTER
                CMA
                INC
                ADD INTMP
            SZA
            BUN _XIF2CheckCharEnt
            BUN _XIF1CheckCharEnt
             / ) {
            _XIF1CheckCharEnt,
                CLA
                INC
                STA OPENTRIG
                CLA
                INC
                STA SENDTRIG
                LDA SENDBUFPTRINIT
                STA SENDBUFPTR
            BUN _XIF3CheckCharEnt
             / } else {  // CheckCharEnt
            _XIF2CheckCharEnt,

                 / > if CheckCharBS
                 / if (
                    LDA ASCIIBKSPACE
                    CMA
                    INC
                    ADD INTMP
                SZA
                BUN _XIF2CheckCharBS
                BUN _XIF1CheckCharBS
                 / ) {
                _XIF1CheckCharBS,

                     / if (
                        LDA SENDBUFPTR
                        CMA
                        INC
                        ADD SENDBUFPTRINIT
                    SZA
                    BUN _XIF1_XAUTO16
                    BUN _XIF2_XAUTO16
                     / ) {
                    _XIF1_XAUTO16,
                        LDA SENDBUFPTR
                        CMA
                        INC
                        CMA
                        STA SENDBUFPTR
                        CLA
                        STA SENDBUFPTR I
                     / }
                    _XIF2_XAUTO16,

                BUN _XIF3CheckCharBS
                 / } else {  // CheckCharBS
                _XIF2CheckCharBS,

                     / if (
                        LDA SENDBUFPTR
                        CMA
                        INC
                        ADD SENDBUFENDANCP
                    SZA
                    BUN _XIF1_XAUTO17
                    BUN _XIF2_XAUTO17
                     / ) {
                    _XIF1_XAUTO17,
                        LDA INTMP
                        STA SENDBUFPTR I
                        LDA SENDBUFPTR
                        INC
                        STA SENDBUFPTR
                        CLA
                        STA SENDBUFPTR I
                     / }
                    _XIF2_XAUTO17,

                 / }
                _XIF3CheckCharBS,
                 / < end of if CheckCharBS

             / }
            _XIF3CheckCharEnt,
             / < end of if CheckCharEnt

            CLA
            INC
            STA OUTTRIG
            LDA MASKSOUT
            STA MASKS
            LDA MASKS
            ADD MASKP
            IMK
     / }
    _XIF2InputAvailable,
     / < end of if InputAvailable


     / > beginning of Prepare
    Prepare,

         / > if OutTrigger
         / if (
            LDA OUTTRIG
        SZA
        BUN _XIF1OutTrigger
        BUN _XIF2OutTrigger
         / ) {
        _XIF1OutTrigger,
            CLA
            STA OUTTRIG

             / > beginning of RenderText
            RenderText,
                LDA DISPBUFPTRINIT
                STA DISPBUFPTR

                LDA ClearLinePtrInit
                STA TEMP1
                _XFOR1_XAUTO1,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2_XAUTO1
                BUN _XFOR3_XAUTO1
                 / ) {
                _XFOR2_XAUTO1,
                    LDA TEMP1 I
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1_XAUTO1
                 / }
                _XFOR3_XAUTO1,


                 / > if OpenArrivedMsg
                 / if (
                    LDA OPENTRIG
                SZA
                BUN _XIF1OpenArrivedMsg
                BUN _XIF2OpenArrivedMsg
                 / ) {
                _XIF1OpenArrivedMsg,
                    CLA
                    STA OPENTRIG

                     / if (
                        LDA STATUREAD
                    SZA
                    BUN _XIF1_XAUTO2
                    BUN _XIF2_XAUTO2
                     / ) {
                    _XIF1_XAUTO2,
                        CLA
                        STA STATUREAD

                        LDA NewMsgTextPtrInit
                        STA TEMP1
                        _XFOR1_XAUTO3,
                         / for (
                            LDA TEMP1 I
                        SZA
                        BUN _XFOR2_XAUTO3
                        BUN _XFOR3_XAUTO3
                         / ) {
                        _XFOR2_XAUTO3,
                            LDA TEMP1 I
                            STA DISPBUFPTR I
                            LDA DISPBUFPTR
                            INC
                            STA DISPBUFPTR
                        LDA TEMP1
                        INC
                        STA TEMP1
                        BUN _XFOR1_XAUTO3
                         / }
                        _XFOR3_XAUTO3,


                        LDA RECVBUFPTRINIT
                        STA TEMP1
                        _XFOR1_XAUTO4,
                         / for (
                            LDA TEMP1 I
                        SZA
                        BUN _XFOR2_XAUTO4
                        BUN _XFOR3_XAUTO4
                         / ) {
                        _XFOR2_XAUTO4,
                            LDA TEMP1 I
                            STA DISPBUFPTR I
                            LDA DISPBUFPTR
                            INC
                            STA DISPBUFPTR
                        LDA TEMP1
                        INC
                        STA TEMP1
                        BUN _XFOR1_XAUTO4
                         / }
                        _XFOR3_XAUTO4,

                        LDA RECVBUFPTRINIT
                        STA RECVBUFPTR
                        CLA
                        STA RECVBUFPTR I
                        LDA ASCIIENTER
                        STA DISPBUFPTR I
                        LDA DISPBUFPTR
                        INC
                        STA DISPBUFPTR
                     / }
                    _XIF2_XAUTO2,

                 / }
                _XIF2OpenArrivedMsg,
                 / < end of if OpenArrivedMsg

                LDA ASCIISPACE
                STA DISPBUFPTR I
                LDA DISPBUFPTR
                INC
                STA DISPBUFPTR

                 / if (
                    LDA STATUREAD
                SZA
                BUN _XIF1_XAUTO5
                BUN _XIF2_XAUTO5
                 / ) {
                _XIF1_XAUTO5,
                    LDA RedBackPtrInit
                    STA STATUSCOLOR
                BUN _XIF3_XAUTO5
                 / } else {  // 
                _XIF2_XAUTO5,
                    LDA ResetTextPtrInit
                    STA STATUSCOLOR
                 / }
                _XIF3_XAUTO5,


                LDA STATUSCOLOR
                STA TEMP1
                _XFOR1_XAUTO6,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2_XAUTO6
                BUN _XFOR3_XAUTO6
                 / ) {
                _XFOR2_XAUTO6,
                    LDA TEMP1 I
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1_XAUTO6
                 / }
                _XFOR3_XAUTO6,

                LDA ASCIISPACE
                STA DISPBUFPTR I
                LDA DISPBUFPTR
                INC
                STA DISPBUFPTR
                LDA ASCIISPACE
                STA DISPBUFPTR I
                LDA DISPBUFPTR
                INC
                STA DISPBUFPTR

                LDA ResetTextPtrInit
                STA TEMP1
                _XFOR1_XAUTO7,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2_XAUTO7
                BUN _XFOR3_XAUTO7
                 / ) {
                _XFOR2_XAUTO7,
                    LDA TEMP1 I
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1_XAUTO7
                 / }
                _XFOR3_XAUTO7,

                LDA GreenTextPtrInit
                STA TEMP2

                 / if (
                    LDA SENDBUFPTR
                    CMA
                    INC
                    ADD SENDBUFENDANCP
                SZA
                BUN _XIF2_XAUTO8
                BUN _XIF1_XAUTO8
                 / ) {
                _XIF1_XAUTO8,
                    LDA RedTextPtrInit
                    STA TEMP2
                 / }
                _XIF2_XAUTO8,


                 / if (
                    LDA SENDBUFPTR
                    CMA
                    INC
                    ADD SENDBUFPTRINIT
                SZA
                BUN _XIF2_XAUTO9
                BUN _XIF1_XAUTO9
                 / ) {
                _XIF1_XAUTO9,
                    LDA RedTextPtrInit
                    STA TEMP2
                 / }
                _XIF2_XAUTO9,


                LDA TEMP2
                STA TEMP1
                _XFOR1_XAUTO10,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2_XAUTO10
                BUN _XFOR3_XAUTO10
                 / ) {
                _XFOR2_XAUTO10,
                    LDA TEMP1 I
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1_XAUTO10
                 / }
                _XFOR3_XAUTO10,

                LDA ASCIISPACE
                STA DISPBUFPTR I
                LDA DISPBUFPTR
                INC
                STA DISPBUFPTR
                LDA SENDBUFPTRINIT
                CMA
                INC
                ADD SENDBUFPTR
                STA TEMPA

                 / > for loop ShowCharNumInput
                LDA Keta10PtrInit
                STA TEMP1
                _XFOR1ShowCharNumInput,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2ShowCharNumInput
                BUN _XFOR3ShowCharNumInput
                 / ) {
                _XFOR2ShowCharNumInput,
                    LDA TEMP1 I
                    CMA
                    INC
                    STA TEMPB
                    CLA
                    STA TEMPQ
                    LDA TEMPQ
                    CMA
                    INC
                    CMA
                    STA TEMPQ

                    _XWH1_XAUTO11,
                     / while (
                        LDA TEMPB
                        CLE
                        CME
                        SZA
                        CME
                        CLA
                        CIL
                        STA TEMP2
                        LDA TEMPB
                        CMA
                        INC
                        ADD TEMPA
                        CLA
                        CIL
                        ADD TEMP2
                    SZA
                    BUN _XWH3_XAUTO11
                    BUN _XWH2_XAUTO11
                     / ) {
                    _XWH2_XAUTO11,
                        LDA TEMPA
                        STA TEMPR
                        LDA TEMPQ
                        INC
                        STA TEMPQ
                        LDA TEMPA
                        ADD TEMPB
                        STA TEMPA
                    BUN _XWH1_XAUTO11
                     / }
                    _XWH3_XAUTO11,

                    LDA TEMPQ
                    ADD ASCIIZERO
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                    LDA TEMPR
                    STA TEMPA
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1ShowCharNumInput
                 / }
                _XFOR3ShowCharNumInput,
                 / < end of for loop ShowCharNumInput


                LDA DispCountPostfixPtrInit
                STA TEMP1
                _XFOR1_XAUTO12,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2_XAUTO12
                BUN _XFOR3_XAUTO12
                 / ) {
                _XFOR2_XAUTO12,
                    LDA TEMP1 I
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1_XAUTO12
                 / }
                _XFOR3_XAUTO12,


                LDA ResetTextPtrInit
                STA TEMP1
                _XFOR1_XAUTO13,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2_XAUTO13
                BUN _XFOR3_XAUTO13
                 / ) {
                _XFOR2_XAUTO13,
                    LDA TEMP1 I
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1_XAUTO13
                 / }
                _XFOR3_XAUTO13,


                LDA PromptTextPtrInit
                STA TEMP1
                _XFOR1_XAUTO14,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2_XAUTO14
                BUN _XFOR3_XAUTO14
                 / ) {
                _XFOR2_XAUTO14,
                    LDA TEMP1 I
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1_XAUTO14
                 / }
                _XFOR3_XAUTO14,


                LDA SENDBUFPTRINIT
                STA TEMP1
                _XFOR1_XAUTO15,
                 / for (
                    LDA TEMP1 I
                SZA
                BUN _XFOR2_XAUTO15
                BUN _XFOR3_XAUTO15
                 / ) {
                _XFOR2_XAUTO15,
                    LDA TEMP1 I
                    STA DISPBUFPTR I
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                LDA TEMP1
                INC
                STA TEMP1
                BUN _XFOR1_XAUTO15
                 / }
                _XFOR3_XAUTO15,

                CLA
                STA DISPBUFPTR I
                LDA DISPBUFPTRINIT
                STA DISPBUFPTR
             / < end of RenderText

         / }
        _XIF2OutTrigger,
         / < end of if OutTrigger


         / > if InTrigger
         / if (
            LDA INPTRIG
        SZA
        BUN _XIF1InTrigger
        BUN _XIF2InTrigger
         / ) {
        _XIF1InTrigger,
            CLA
            STA INPTRIG
         / }
        _XIF2InTrigger,
         / < end of if InTrigger

     / < end of Prepare


     / > if OutputAvailable
     / if (
        CLA
        INC
        SKO
        CLA
    SZA
    BUN _XIF1OutputAvailable
    BUN _XIF2OutputAvailable
     / ) {
    _XIF1OutputAvailable,

         / > if ShowMain
         / if (

             / > beginning of GetOutput
            GetOutput,
                LDA DISPBUFPTR I
                STA TEMP1

                 / > if StepDispText
                 / if (
                    LDA TEMP1
                SZA
                BUN _XIF1StepDispText
                BUN _XIF2StepDispText
                 / ) {
                _XIF1StepDispText,
                    LDA DISPBUFPTR
                    INC
                    STA DISPBUFPTR
                BUN _XIF3StepDispText
                 / } else {  // StepDispText
                _XIF2StepDispText,
                    CLA
                    INC
                    STA INPTRIG
                    LDA MASKSIN
                    STA MASKS
                    LDA MASKS
                    ADD MASKP
                    IMK
                 / }
                _XIF3StepDispText,
                 / < end of if StepDispText

                LDA TEMP1
             / < end of GetOutput

        SZA
        BUN _XIF1ShowMain
        BUN _XIF2ShowMain
         / ) {
        _XIF1ShowMain,
            OUT
         / }
        _XIF2ShowMain,
         / < end of if ShowMain

     / }
    _XIF2OutputAvailable,
     / < end of if OutputAvailable

    PIO

     / > if InputAvailablePara
     / if (
        CLA
        INC
        SKI
        CLA
    SZA
    BUN _XIF1InputAvailablePara
    BUN _XIF2InputAvailablePara
     / ) {
    _XIF1InputAvailablePara,
        INP
        STA INTMP

             / > if CheckCharBSPara
             / if (
                LDA ASCIIBKSPACE
                CMA
                INC
                ADD INTMP
            SZA
            BUN _XIF2CheckCharBSPara
            BUN _XIF1CheckCharBSPara
             / ) {
            _XIF1CheckCharBSPara,
            BUN _XIF3CheckCharBSPara
             / } else {  // CheckCharBSPara
            _XIF2CheckCharBSPara,

                 / if (
                    LDA RECVBUFPTR
                    CMA
                    INC
                    ADD RECVBUFENDANCP
                SZA
                BUN _XIF1_XAUTO18
                BUN _XIF2_XAUTO18
                 / ) {
                _XIF1_XAUTO18,
                    LDA INTMP
                    STA RECVBUFPTR I
                    LDA RECVBUFPTR
                    INC
                    STA RECVBUFPTR
                    CLA
                    STA RECVBUFPTR I
                    CLA
                    INC
                    STA STATUREAD
                 / }
                _XIF2_XAUTO18,

             / }
            _XIF3CheckCharBSPara,
             / < end of if CheckCharBSPara

     / }
    _XIF2InputAvailablePara,
     / < end of if InputAvailablePara


     / > if OutputAvailablePara
     / if (
        CLA
        INC
        SKO
        CLA
    SZA
    BUN _XIF1OutputAvailablePara
    BUN _XIF2OutputAvailablePara
     / ) {
    _XIF1OutputAvailablePara,

         / if (
            LDA SENDTRIG
        SZA
        BUN _XIF1_XAUTO19
        BUN _XIF2_XAUTO19
         / ) {
        _XIF1_XAUTO19,

             / if (

                 / > beginning of GetOutputPara
                GetOutputPara,
                    LDA SENDBUFPTR I
                    STA TEMP1

                     / > if StepOutputText
                     / if (
                        LDA TEMP1
                    SZA
                    BUN _XIF1StepOutputText
                    BUN _XIF2StepOutputText
                     / ) {
                    _XIF1StepOutputText,
                        LDA SENDBUFPTR
                        INC
                        STA SENDBUFPTR
                     / }
                    _XIF2StepOutputText,
                     / < end of if StepOutputText

                    ADD TEMP1
                 / < end of GetOutputPara

            SZA
            BUN _XIF1_XAUTO20
            BUN _XIF2_XAUTO20
             / ) {
            _XIF1_XAUTO20,
                OUT
                LDA DEBUGNUM
                INC
                STA DEBUGNUM
            BUN _XIF3_XAUTO20
             / } else {  // 
            _XIF2_XAUTO20,
                CLA
                STA SENDTRIG
                LDA SENDBUFPTRINIT
                STA SENDBUFPTR
                CLA
                STA SENDBUFPTR I
             / }
            _XIF3_XAUTO20,

         / }
        _XIF2_XAUTO19,

     / }
    _XIF2OutputAvailablePara,
     / < end of if OutputAvailablePara

    SIO
    InterruptReturn,

     / > if HaltTrigger
     / if (
        LDA HaltFlag
    SZA
    BUN _XIF1HaltTrigger
    BUN _XIF2HaltTrigger
     / ) {
    _XIF1HaltTrigger,
        LDA EBAK
        CLE
        CIR
        LDA ACCBAK
        BUN INT_RET I
     / }
    _XIF2HaltTrigger,
     / < end of if HaltTrigger

    LDA EBAK
    CLE
    CIR
    LDA ACCBAK
    ION
    BUN INT_RET I
 / < end of INT_MAIN

 / Data Segment
    ACCBAK, DEC 0
    EBAK, DEC 0
    INPTRIG, DEC 0
    OUTTRIG, DEC 0
    SENDTRIG, DEC 0
    HaltFlag, DEC 0
    REDRAWTRIG, DEC 0
    OPENTRIG, DEC 0
    DEBUGNUM, DEC 0
    MASKSIN, DEC 8
    MASKSOUT, DEC 4
    MASKPIN, DEC 0
    MASKPOUT, DEC 1
    MASKS, DEC 0
    MASKP, DEC 0
    SENDBUFFER, DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
    SENDBUFENDANC, DEC 0
    SENDBUFPTRINIT, SYM SENDBUFFER
    SENDBUFPTR, SYM SENDBUFFER
    SENDBUFENDANCP, SYM SENDBUFENDANC
    RECVBUFFER, DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
    RECVBUFENDANC, DEC 0
    RECVBUFPTRINIT, SYM RECVBUFFER
    RECVBUFPTR, SYM RECVBUFFER
    RECVBUFENDANCP, SYM RECVBUFENDANC
    DISPBUFFER, DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
        DEC 0
    DISPBUFPTRINIT, SYM DISPBUFFER
    DISPBUFPTR, SYM DISPBUFFER
    ASCIIENTER, DEC 10
    ASCIIZERO, DEC 48
    ASCIISPACE, DEC 32
    ASCIIBKSPACE, DEC 127
    ASCIICTRLD, DEC 4
    TEMP1, DEC 0
    TEMP2, DEC 0
    TEMPA, DEC 0
    TEMPB, DEC 0
    TEMPQ, DEC 0
    TEMPR, DEC 0
    INTMP, DEC 0
    DispCountPostfix, DEC 47
        DEC 49
        DEC 48
        DEC 48
        DEC 0
        DEC 0
    DispCountPostfixPtrInit, SYM DispCountPostfix
    PromptText, DEC 32
        DEC 62
        DEC 32
        DEC 0
        DEC 0
    PromptTextPtrInit, SYM PromptText
    NewMsgText, DEC 78
        DEC 101
        DEC 119
        DEC 32
        DEC 77
        DEC 101
        DEC 115
        DEC 115
        DEC 97
        DEC 103
        DEC 101
        DEC 32
        DEC 62
        DEC 32
        DEC 0
        DEC 0
    NewMsgTextPtrInit, SYM NewMsgText
    RedText, DEC 27
        DEC 91
        DEC 57
        DEC 49
        DEC 109
        DEC 0
        DEC 0
    RedTextPtrInit, SYM RedText
    RedBack, DEC 27
        DEC 91
        DEC 52
        DEC 49
        DEC 109
        DEC 0
        DEC 0
    RedBackPtrInit, SYM RedBack
    GreenText, DEC 27
        DEC 91
        DEC 57
        DEC 50
        DEC 109
        DEC 0
        DEC 0
    GreenTextPtrInit, SYM GreenText
    ResetText, DEC 27
        DEC 91
        DEC 48
        DEC 109
        DEC 0
        DEC 0
    ResetTextPtrInit, SYM ResetText
    ClearLine, DEC 27
        DEC 91
        DEC 49
        DEC 71
        DEC 27
        DEC 91
        DEC 48
        DEC 75
        DEC 0
        DEC 0
    ClearLinePtrInit, SYM ClearLine
    Keta10Arr, DEC 100
        DEC 10
        DEC 1
        DEC 0
    Keta10PtrInit, SYM Keta10Arr
    ISSTATOUT, DEC 0
    STATUSCOLOR, SYM ResetText
    STATUREAD, DEC 0
    INPUTCHARNUM, DEC 0
END

